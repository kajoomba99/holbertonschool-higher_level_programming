The ``0-add_integer.py`` module
======================

Using ``add_integer``
-------------------

First import
``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__("0-add_integer").add_integer

Normal cases:

    >>> add_integer(1, 2)
    3

    >>> add_integer(0, 0)
    0

    >>> add_integer(-3000, -1500)
    -4500

Float numbers:

    >>> add_integer(3.00, 4.99)
    7

    >>> add_integer(3.7, 1.45)
    4

    >>> add_integer(-3.15, 5)
    2

Error cases:
    >>> add_integer(None, None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(None, 98)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(98, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer("Hola", "Hola")
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer("Hola")
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(98, "Hola")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(3.7, 1.45, 3)
    Traceback (most recent call last):
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'
